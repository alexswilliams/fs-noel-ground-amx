PROGRAM_NAME='AtlonaATLINE'

#if_not_defined __AtlonaATLINE__
#define __AtlonaATLINE__


DEFINE_DEVICE
    
    dvSwitcher = 5001:8:1


DEFINE_VARIABLE
    LONG ATLONA_TIMELINE[2] = {30000,30000}

    

DEFINE_FUNCTION SWITCHER_SET_BAUD() {
    SEND_COMMAND dvSwitcher, 'SET MODE DATA'
    SEND_COMMAND dvSwitcher, 'SET BAUD 19200,N,8,1'
}


DEFINE_CONSTANT
    INTEGER SWITCHER_POWER_ON		= 1
    INTEGER SWITCHER_POWER_OFF		= 0
    
    INTEGER SWITCHER_INPUT_COMPOSITE	= 0
    INTEGER SWITCHER_INPUT_SVIDEO	= 1
    INTEGER SWITCHER_INPUT_COMPONENT	= 2
    INTEGER SWITCHER_INPUT_VGA1		= 3
    INTEGER SWITCHER_INPUT_VGA2		= 4
    INTEGER SWITCHER_INPUT_VGA3		= 5
    INTEGER SWITCHER_INPUT_HDMI1	= 6
    INTEGER SWITCHER_INPUT_HDMI2	= 7
    INTEGER SWITCHER_INPUT_HDMI3	= 8
    INTEGER SWITCHER_INPUT_HDMI4	= 9
    
    INTEGER SWITCHER_EDID_NATIVE	= 0
    INTEGER SWITCHER_EDID_VGA_60	= 1
    INTEGER SWITCHER_EDID_SVGA_60	= 2
    INTEGER SWITCHER_EDID_XGA_60	= 3
    INTEGER SWITCHER_EDID_SXGA_60	= 4
    INTEGER SWITCHER_EDID_UXGA_60	= 5
    INTEGER SWITCHER_EDID_480i		= 6
    INTEGER SWITCHER_EDID_480p		= 7
    INTEGER SWITCHER_EDID_720p_60	= 8
    INTEGER SWITCHER_EDID_1080i_60	= 9
    INTEGER SWITCHER_EDID_1080p_60	= 10
    INTEGER SWITCHER_EDID_576i_60	= 11
    INTEGER SWITCHER_EDID_576p_60	= 12
    INTEGER SWITCHER_EDID_720p_50	= 13
    INTEGER SWITCHER_EDID_1080i_50	= 14
    INTEGER SWITCHER_EDID_1080p_50	= 15
    INTEGER SWITCHER_EDID_WXGA_60	= 16
    INTEGER SWITCHER_EDID_WSXGA_60	= 17
    INTEGER SWITCHER_EDID_WUXGA_60	= 18
    INTEGER SWITCHER_EDID_WXGA_PLUS_60	= 19
    INTEGER SWITCHER_EDID_SXGA_PLUS_60	= 20
    
    INTEGER SWITCHER_SIZE_FULL		= 0
    INTEGER SWITCHER_SIZE_OVERSCAN	= 1
    INTEGER SWITCHER_SIZE_UNDERSCAN	= 2
    INTEGER SWITCHER_SIZE_LETTERBOX	= 3
    INTEGER SWITCHER_SIZE_PANSCAN	= 4
    
    INTEGER SWITCHER_PICTUREMODE_STANDARD	= 0
    INTEGER SWITCHER_PICTUREMODE_MOVIE		= 1
    INTEGER SWITCHER_PICTUREMODE_VIVID		= 2
    INTEGER SWITCHER_PICTUREMODE_USER		= 3

    INTEGER SWITCHER_NOISE_REDUCTION_OFF	= 0
    INTEGER SWITCHER_NOISE_REDUCTION_LOW	= 1
    INTEGER SWITCHER_NOISE_REDUCTION_MIDDLE	= 2
    INTEGER SWITCHER_NOISE_REDUCTION_HIGH	= 3
    
    INTEGER SWITCHER_COLORTEMP_NORMAL		= 0
    INTEGER SWITCHER_COLORTEMP_WARM		= 1
    INTEGER SWITCHER_COLORTEMP_COOL		= 2
    INTEGER SWITCHER_COLORTEMP_USER		= 3
    
    INTEGER SWITCHER_AUDIO_MUTE_OFF		= 0
    INTEGER SWITCHER_AUDIO_MUTE_ON		= 1
    
    INTEGER SWITCHER_AUDIO_DELAY_OFF		= 0
    INTEGER SWITCHER_AUDIO_DELAY_40MS		= 1
    INTEGER SWITCHER_AUDIO_DELAY_110MS		= 2
    INTEGER SWITCHER_AUDIO_DELAY_150MS		= 3
    

DEFINE_FUNCTION SWITCHER_SET_POWER(INTEGER val) { SEND_STRING dvSwitcher, "'S POWER ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_INPUT(INTEGER val) { SEND_STRING dvSwitcher, "'S SOURCE ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_OUTPUT_EDID(INTEGER val) { SEND_STRING dvSwitcher, "'S OUTPUT ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_SIZE(INTEGER val) { SEND_STRING dvSwitcher, "'S SIZE ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_PICTUREMODE(INTEGER val) { SEND_STRING dvSwitcher, "'S PICTUREMODE ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_CONTRAST(INTEGER val) { SEND_STRING dvSwitcher, "'S CONTRAST ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_BRIGHTNESS(INTEGER val) { SEND_STRING dvSwitcher, "'S BRIGHTNESS ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_HUE(INTEGER val) { SEND_STRING dvSwitcher, "'S HUE ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_SATURATION(INTEGER val) { SEND_STRING dvSwitcher, "'S SATURATION ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_SHARPNESS(INTEGER val) { SEND_STRING dvSwitcher, "'S SHARPNESS ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_NOISE_REDUCTION(INTEGER val) { SEND_STRING dvSwitcher, "'S NR ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_PC_PHASE(INTEGER val) { SEND_STRING dvSwitcher, "'S PCPHASE ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_PC_CLOCK(INTEGER val) { SEND_STRING dvSwitcher, "'S PCCLOCK ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_PC_HPOS(INTEGER val) { SEND_STRING dvSwitcher, "'S PCHPOSITION ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_PC_VPOS(INTEGER val) { SEND_STRING dvSwitcher, "'S PCVPOSITION ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_COLORTEMP(INTEGER val) { SEND_STRING dvSwitcher, "'S COLORTEMP ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_RED(INTEGER val) { SEND_STRING dvSwitcher, "'S RED ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_GREEN(INTEGER val) { SEND_STRING dvSwitcher, "'S GREEN ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_BLUE(INTEGER val) { SEND_STRING dvSwitcher, "'S BLUE ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_OSD_HPOS(INTEGER val) { SEND_STRING dvSwitcher, "'S OSDHPOSITION ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_OSD_VPOS(INTEGER val) { SEND_STRING dvSwitcher, "'S OSDVPOSITION ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_OSD_TIMEOUT(INTEGER val) { SEND_STRING dvSwitcher, "'S OSDTIMEOUT ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_OSD_BACKGROUND(INTEGER val) { SEND_STRING dvSwitcher, "'S OSDBACKGROUND ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_AUDIO_MUTE(INTEGER val) { SEND_STRING dvSwitcher, "'S AUDIOMUTE ',itoa(val),$0d" }
DEFINE_FUNCTION SWITCHER_SET_AUDIO_DELAY(INTEGER val) { SEND_STRING dvSwitcher, "'S AUDIODELAY ',itoa(val),$0d" }

DEFINE_FUNCTION SWITCHER_KEY_POWER() { SEND_STRING dvSwitcher, "'K POWER',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_COMPOSITE() { SEND_STRING dvSwitcher, "'K CV',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_SVIDEO() { SEND_STRING dvSwitcher, "'K SV',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_COMPONENT() { SEND_STRING dvSwitcher, "'K COMP',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_VGA1() { SEND_STRING dvSwitcher, "'K PC1',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_VGA2() { SEND_STRING dvSwitcher, "'K PC2',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_VGA3() { SEND_STRING dvSwitcher, "'K PC3',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_HDMI1() { SEND_STRING dvSwitcher, "'K HDMI1',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_HDMI2() { SEND_STRING dvSwitcher, "'K HDMI2',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_HDMI3() { SEND_STRING dvSwitcher, "'K HDMI3',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_HDMI4() { SEND_STRING dvSwitcher, "'K HDMI4',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_MENU() { SEND_STRING dvSwitcher, "'K MENU',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_DEC() { SEND_STRING dvSwitcher, "'K DEC',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_INC() { SEND_STRING dvSwitcher, "'K INC',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_ENTER() { SEND_STRING dvSwitcher, "'K ENTER',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_SOURCE() { SEND_STRING dvSwitcher, "'K SOURCE',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_VGA() { SEND_STRING dvSwitcher, "'K VGA',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_SVGA() { SEND_STRING dvSwitcher, "'K SVGA',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_XGA() { SEND_STRING dvSwitcher, "'K XGA',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_SXGA() { SEND_STRING dvSwitcher, "'K SXGA',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_UXGA() { SEND_STRING dvSwitcher, "'K UXGA',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_1080i_60() { SEND_STRING dvSwitcher, "'K 1080i60',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_480p() { SEND_STRING dvSwitcher, "'K 480p',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_720p_60() { SEND_STRING dvSwitcher, "'K 720p',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_1080p_60() { SEND_STRING dvSwitcher, "'K 1080p60',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_UP() { SEND_STRING dvSwitcher, "'K UP',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_DOWN() { SEND_STRING dvSwitcher, "'K DOWN',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_LEFT() { SEND_STRING dvSwitcher, "'K LEFT',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_RIGHT() { SEND_STRING dvSwitcher, "'K RIGHT',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_EXIT() { SEND_STRING dvSwitcher, "'K EXIT',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_AUTO() { SEND_STRING dvSwitcher, "'K AUTO',$0d" }
DEFINE_FUNCTION SWITCHER_KEY_RESET() { SEND_STRING dvSwitcher, "'K RESET',$0d" }


DEFINE_EVENT

    TIMELINE_EVENT[5] {
	SWITCHER_SET_BAUD()
    }

DEFINE_START
    SWITCHER_SET_BAUD()
    TIMELINE_CREATE(5, ATLONA_TIMELINE, 2, TIMELINE_RELATIVE, TIMELINE_REPEAT)


#end_if
